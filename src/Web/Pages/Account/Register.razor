@page "/account/register"
@using System.ComponentModel.DataAnnotations

<MudMainContent Class="d-flex align-center" style="height: 90vh;">
    <MudContainer MaxWidth="MaxWidth.ExtraSmall">
        <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">Welcome!</MudText>
                        <MudText>Create a new account</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudText Color="Color.Error">@errorMessage</MudText>

                    <MudTextField @bind-Value="model.Username" For="@(() => model.Username)" 
                        T="string" Variant="Variant.Outlined" Label="Username" InputType="InputType.Text" 
                        Required="true" RequiredError="Username is required!"
                        Class="mb-4" />
                    <MudTextField @bind-Value="model.Password" For="@(() => model.Password)" 
                        T="string" Variant="Variant.Outlined" Label="Password" InputType="InputType.Password"
                        Required="true" RequiredError="Password is required!" />
                </MudCardContent>
                <MudCardActions Class="pa-4">
                    <MudStack style="width: 100%;">
                        <MudButton ButtonType="ButtonType.Submit" FullWidth="true" Size="Size.Large" Variant="Variant.Filled" Color="Color.Primary">Register</MudButton>
                        <MudButton FullWidth="true" Size="Size.Large" Variant="Variant.Text" Color="Color.Primary" Href="/account/login">Login</MudButton>
                    </MudStack>
                </MudCardActions>
            </MudCard>
        </EditForm>
    </MudContainer>
</MudMainContent>

@code
{
    AccountRegisterForm model = new AccountRegisterForm();
    string errorMessage = string.Empty;

    public class AccountRegisterForm
    {
        [Required]
        [StringLength(50, ErrorMessage = "Name length can't be more than 50.")]
        public string Username { get; set; } = string.Empty;

        [Required]
        [DataType(DataType.Password)]
        [StringLength(1000, ErrorMessage = "Password can't be longer than 1000.", MinimumLength = 1)]
        public string Password { get; set; } = string.Empty;
    }

    private async void OnValidSubmit()
    {
        try
        {
            // Call LoginAsync and send POST request
            await _accountService.RegisterAsync(model.Username, model.Password);

            // Clear error message if exception was not thrown
            errorMessage = string.Empty;
        }
        catch (Exception ex)
        {
            // Clear form
            model = new AccountRegisterForm();

            // Display error message
            errorMessage = ex.Message;
        }

        StateHasChanged();
    }
}